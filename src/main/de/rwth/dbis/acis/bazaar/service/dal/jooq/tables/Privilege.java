/*
 * This file is generated by jOOQ.
*/
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.Keys;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.Reqbaz;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records.PrivilegeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Privilege extends TableImpl<PrivilegeRecord> {

    private static final long serialVersionUID = 799298701;

    /**
     * The reference instance of <code>reqbaz.privilege</code>
     */
    public static final Privilege PRIVILEGE = new Privilege();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PrivilegeRecord> getRecordType() {
        return PrivilegeRecord.class;
    }

    /**
     * The column <code>reqbaz.privilege.id</code>.
     */
    public final TableField<PrivilegeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>reqbaz.privilege.name</code>.
     */
    public final TableField<PrivilegeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * Create a <code>reqbaz.privilege</code> table reference
     */
    public Privilege() {
        this("privilege", null);
    }

    /**
     * Create an aliased <code>reqbaz.privilege</code> table reference
     */
    public Privilege(String alias) {
        this(alias, PRIVILEGE);
    }

    private Privilege(String alias, Table<PrivilegeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Privilege(String alias, Table<PrivilegeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Reqbaz.REQBAZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PrivilegeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRIVILEGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PrivilegeRecord> getPrimaryKey() {
        return Keys.KEY_PRIVILEGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PrivilegeRecord>> getKeys() {
        return Arrays.<UniqueKey<PrivilegeRecord>>asList(Keys.KEY_PRIVILEGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Privilege as(String alias) {
        return new Privilege(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Privilege rename(String name) {
        return new Privilege(name, null);
    }
}
