/**
 * This class is generated by jOOQ
 */
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.Keys;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.Reqbaz;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records.AttachmentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Attachments extends TableImpl<AttachmentsRecord> {

    private static final long serialVersionUID = 1722749179;

    /**
     * The reference instance of <code>reqbaz.attachments</code>
     */
    public static final Attachments ATTACHMENTS = new Attachments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttachmentsRecord> getRecordType() {
        return AttachmentsRecord.class;
    }

    /**
     * The column <code>reqbaz.attachments.Id</code>.
     */
    public final TableField<AttachmentsRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>reqbaz.attachments.creation_time</code>.
     */
    public final TableField<AttachmentsRecord, Timestamp> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>reqbaz.attachments.lastupdated_time</code>.
     */
    public final TableField<AttachmentsRecord, Timestamp> LASTUPDATED_TIME = createField("lastupdated_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>reqbaz.attachments.Requirement_Id</code>.
     */
    public final TableField<AttachmentsRecord, Integer> REQUIREMENT_ID = createField("Requirement_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>reqbaz.attachments.User_Id</code>.
     */
    public final TableField<AttachmentsRecord, Integer> USER_ID = createField("User_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>reqbaz.attachments.title</code>.
     */
    public final TableField<AttachmentsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>reqbaz.attachments.description</code>.
     */
    public final TableField<AttachmentsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>reqbaz.attachments.mime_type</code>.
     */
    public final TableField<AttachmentsRecord, String> MIME_TYPE = createField("mime_type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>reqbaz.attachments.identifier</code>.
     */
    public final TableField<AttachmentsRecord, String> IDENTIFIER = createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(900).nullable(false), this, "");

    /**
     * The column <code>reqbaz.attachments.fileUrl</code>.
     */
    public final TableField<AttachmentsRecord, String> FILEURL = createField("fileUrl", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "");

    /**
     * Create a <code>reqbaz.attachments</code> table reference
     */
    public Attachments() {
        this("attachments", null);
    }

    /**
     * Create an aliased <code>reqbaz.attachments</code> table reference
     */
    public Attachments(String alias) {
        this(alias, ATTACHMENTS);
    }

    private Attachments(String alias, Table<AttachmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Attachments(String alias, Table<AttachmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Reqbaz.REQBAZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttachmentsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ATTACHMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttachmentsRecord> getPrimaryKey() {
        return Keys.KEY_ATTACHMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttachmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<AttachmentsRecord>>asList(Keys.KEY_ATTACHMENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AttachmentsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AttachmentsRecord, ?>>asList(Keys.ATTACHEMENT_REQUIREMENT, Keys.ATTACHEMENT_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Attachments as(String alias) {
        return new Attachments(alias, this);
    }

    /**
     * Rename this table
     */
    public Attachments rename(String name) {
        return new Attachments(name, null);
    }
}
