/*
 * This file is generated by jOOQ.
*/
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.Comment;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record7<Integer, String, Timestamp, Timestamp, Integer, Integer, Integer> {

    private static final long serialVersionUID = 191217760;

    /**
     * Setter for <code>reqbaz.comment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>reqbaz.comment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>reqbaz.comment.message</code>.
     */
    public void setMessage(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>reqbaz.comment.message</code>.
     */
    public String getMessage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>reqbaz.comment.creation_date</code>.
     */
    public void setCreationDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>reqbaz.comment.creation_date</code>.
     */
    public Timestamp getCreationDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>reqbaz.comment.last_updated_date</code>.
     */
    public void setLastUpdatedDate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>reqbaz.comment.last_updated_date</code>.
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>reqbaz.comment.requirement_id</code>.
     */
    public void setRequirementId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>reqbaz.comment.requirement_id</code>.
     */
    public Integer getRequirementId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>reqbaz.comment.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>reqbaz.comment.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>reqbaz.comment.reply_to_comment_id</code>.
     */
    public void setReplyToCommentId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>reqbaz.comment.reply_to_comment_id</code>.
     */
    public Integer getReplyToCommentId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Timestamp, Timestamp, Integer, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Timestamp, Timestamp, Integer, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Comment.COMMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Comment.COMMENT.MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Comment.COMMENT.CREATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Comment.COMMENT.LAST_UPDATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Comment.COMMENT.REQUIREMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Comment.COMMENT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Comment.COMMENT.REPLY_TO_COMMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getLastUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getRequirementId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getReplyToCommentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value2(String value) {
        setMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value3(Timestamp value) {
        setCreationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value4(Timestamp value) {
        setLastUpdatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value5(Integer value) {
        setRequirementId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value6(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value7(Integer value) {
        setReplyToCommentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord values(Integer value1, String value2, Timestamp value3, Timestamp value4, Integer value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Integer id, String message, Timestamp creationDate, Timestamp lastUpdatedDate, Integer requirementId, Integer userId, Integer replyToCommentId) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, message);
        set(2, creationDate);
        set(3, lastUpdatedDate);
        set(4, requirementId);
        set(5, userId);
        set(6, replyToCommentId);
    }
}
