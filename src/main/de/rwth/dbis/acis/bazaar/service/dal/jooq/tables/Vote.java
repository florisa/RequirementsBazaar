/*
 * This file is generated by jOOQ.
*/
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.Keys;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.Reqbaz;
import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records.VoteRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vote extends TableImpl<VoteRecord> {

    private static final long serialVersionUID = 514441143;

    /**
     * The reference instance of <code>reqbaz.vote</code>
     */
    public static final Vote VOTE = new Vote();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VoteRecord> getRecordType() {
        return VoteRecord.class;
    }

    /**
     * The column <code>reqbaz.vote.id</code>.
     */
    public final TableField<VoteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>reqbaz.vote.is_upvote</code>.
     */
    public final TableField<VoteRecord, Byte> IS_UPVOTE = createField("is_upvote", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>reqbaz.vote.requirement_id</code>.
     */
    public final TableField<VoteRecord, Integer> REQUIREMENT_ID = createField("requirement_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>reqbaz.vote.user_id</code>.
     */
    public final TableField<VoteRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>reqbaz.vote.creation_time</code>.
     */
    public final TableField<VoteRecord, Timestamp> CREATION_TIME = createField("creation_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>reqbaz.vote</code> table reference
     */
    public Vote() {
        this("vote", null);
    }

    /**
     * Create an aliased <code>reqbaz.vote</code> table reference
     */
    public Vote(String alias) {
        this(alias, VOTE);
    }

    private Vote(String alias, Table<VoteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vote(String alias, Table<VoteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Reqbaz.REQBAZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VoteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VOTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VoteRecord> getPrimaryKey() {
        return Keys.KEY_VOTE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VoteRecord>> getKeys() {
        return Arrays.<UniqueKey<VoteRecord>>asList(Keys.KEY_VOTE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VoteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VoteRecord, ?>>asList(Keys.VOTE_REQUIREMENT, Keys.VOTE_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vote as(String alias) {
        return new Vote(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vote rename(String name) {
        return new Vote(name, null);
    }
}
