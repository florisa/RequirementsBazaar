/*
 * This file is generated by jOOQ.
*/
package de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.records;


import de.rwth.dbis.acis.bazaar.service.dal.jooq.tables.Vote;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VoteRecord extends UpdatableRecordImpl<VoteRecord> implements Record5<Integer, Byte, Integer, Integer, Timestamp> {

    private static final long serialVersionUID = -1610365598;

    /**
     * Setter for <code>reqbaz.vote.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>reqbaz.vote.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>reqbaz.vote.is_upvote</code>.
     */
    public void setIsUpvote(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>reqbaz.vote.is_upvote</code>.
     */
    public Byte getIsUpvote() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>reqbaz.vote.requirement_id</code>.
     */
    public void setRequirementId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>reqbaz.vote.requirement_id</code>.
     */
    public Integer getRequirementId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>reqbaz.vote.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>reqbaz.vote.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>reqbaz.vote.creation_time</code>.
     */
    public void setCreationTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>reqbaz.vote.creation_time</code>.
     */
    public Timestamp getCreationTime() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Byte, Integer, Integer, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Byte, Integer, Integer, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Vote.VOTE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return Vote.VOTE.IS_UPVOTE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Vote.VOTE.REQUIREMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Vote.VOTE.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Vote.VOTE.CREATION_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getIsUpvote();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getRequirementId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreationTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value2(Byte value) {
        setIsUpvote(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value3(Integer value) {
        setRequirementId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord value5(Timestamp value) {
        setCreationTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteRecord values(Integer value1, Byte value2, Integer value3, Integer value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VoteRecord
     */
    public VoteRecord() {
        super(Vote.VOTE);
    }

    /**
     * Create a detached, initialised VoteRecord
     */
    public VoteRecord(Integer id, Byte isUpvote, Integer requirementId, Integer userId, Timestamp creationTime) {
        super(Vote.VOTE);

        set(0, id);
        set(1, isUpvote);
        set(2, requirementId);
        set(3, userId);
        set(4, creationTime);
    }
}
